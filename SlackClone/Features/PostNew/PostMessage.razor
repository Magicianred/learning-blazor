@using SlackClone.Domain

<div class = "card my-3">
    <div class="card-body">
        <EditForm Model="NewMessage" OnValidSubmit="HandleSubmit">
            <div class="form-group">
                <InputTextArea @bind-Value="NewMessage.Message" class="form-control" placeholder="Type your message" />
            </div>
            <button class="btn btn-primary">Post</button>
        </EditForm>
    </div>
</div>

@code
{
    /* 
    @bind-Value will set up two-way-binding for this input to NewMessage.Message. 
    When the user enters a new value, NewMessage.Message will be updated accordingly, 
    and if NewMessage.Message is updated some other way (in code for example) 
    then the textarea will be updated with the new value.*/
    public SlackMessage NewMessage { get; set; } = new SlackMessage();
    [Parameter]
    public EventCallback<SlackMessage> OnPosted {get; set;} // Callbacks represent executable code which is passed as an argument to other code.
    async Task HandleSubmit()
    {
        NewMessage.PostedOn = DateTime.Now;
        NewMessage.PostedBy = "GPS";
        await OnPosted.InvokeAsync(NewMessage);
        NewMessage = new SlackMessage();

    }
}